name: CI build and push Docker image
on:
  workflow_run:
    workflows: ["CI devops test backend"]
    branches: [main]
    types:
      - completed
jobs:
  build-and-push-docker-image:
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build image and push backend
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./simple-api-student-main
          # Note: tags has to be all lower-case
          tags:  ${{secrets.DOCKER_HUB_USERNAME}}/api:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
      
      - name: Build image and push database
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./database
          # Note: tags has to be all lower-case
          tags:  ${{secrets.DOCKER_HUB_USERNAME}}/sql:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
        

      - name: Build image and push httpd
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./http
          # Note: tags has to be all lower-case
          tags:  ${{secrets.DOCKER_HUB_USERNAME}}/http:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
        # DO the same for httpd
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ./ansible/playbook.yml
          key: ${{secrets.ID_RSA_TP_ANSIBLE}}
          options: |
            --inventory inventories/setup.yml
          extra-vars: 
            "postgres_db: ${{secrets.POSTGRES_DB}}
            postgres_user: ${{secrets.POSTGRES_USER}}
            postgres_password: ${{secrets.POSTGRES_PASSWORD}} 
            db_url: ${{secrets.DOCKER_HUB_USERNAME}}
            db_user: ${{secrets.POSTGRES_USER}}
            db_password: ${{secrets.POSTGRES_PASSWORD}}
            docker_hub_username: ${{secrets.DOCKER_HUB_USERNAME}}
            docker_hub_password: ${{secrets.DOCKER_HUB_PASSWORD}}"